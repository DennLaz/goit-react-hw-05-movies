{"version":3,"file":"static/js/273.7fb6da79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/module/MovieDetails/movieDetails.module.css?f59e","module/MovieDetails/MovieDetails.jsx","webpack://react-homework-template/./src/pages/MovieDetailsPage/movieDetailsPage.module.css?c394","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"movieDetails_item__rpXWe\",\"img\":\"movieDetails_img__pp2NA\",\"wrap\":\"movieDetails_wrap__KPJ02\",\"text\":\"movieDetails_text__chRys\"};","import PropTypes from 'prop-types';\n\nimport styles from './movieDetails.module.css';\n\nconst MovieDetails = ({\n  title,\n  overview,\n  genres,\n  poster_path,\n  release_date,\n  vote_average,\n}) => {\n  const genre = genres.map(el => el.name).join(', ');\n  const releaseDate = release_date.slice(0, 4);\n  const voteAverageOnPercentage = vote_average * 10;\n\n  return (\n    <>\n      <li className={styles.item}>\n        <img\n          className={styles.img}\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n        <div className={styles.wrap}>\n          <h3 className={styles.text}>\n            {title}\n            <span> ({releaseDate})</span>\n          </h3>\n          <p className={styles.text}>User Score: {`${voteAverageOnPercentage}%`}</p>\n          <h4 className={styles.text}>Overview</h4>\n          <p className={styles.text}>{overview}</p>\n          <h4 className={styles.text}>Genres</h4>\n          <p className={styles.text}>{genre}</p>\n        </div>\n      </li>\n    </>\n  );\n};\n\nMovieDetails.defaultProps = {\n  title: 'unknown',\n  overview: 'Information not found',\n  genres: [],\n  poster_path: 'Image not found',\n  release_date: 'Date not found',\n  vote_average: 0,\n};\n\nMovieDetails.propTypes = {\n  title: PropTypes.string.isRequired,\n  overview: PropTypes.string.isRequired,\n  poster_path: PropTypes.string.isRequired,\n  release_date: PropTypes.string.isRequired,\n  vote_average: PropTypes.number.isRequired,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"movieDetailsPage_button__FSz1W\",\"text\":\"movieDetailsPage_text__W98Cn\",\"info\":\"movieDetailsPage_info__G9PsW\",\"wrap\":\"movieDetailsPage_wrap__nPhtF\",\"link\":\"movieDetailsPage_link__ZHtlQ\"};","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\n\nimport { getMovieDetailsById } from '../../shared/api/movies';\nimport MovieDetails from 'module/MovieDetails';\n\nimport styles from './movieDetailsPage.module.css';\n\nconst MovieDetailsPage = () => {\n  const [state, setState] = useState({\n    movie: {},\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  const { movie, loading, error } = state;\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: true,\n        error: false,\n      }));\n      try {\n        const data = await getMovieDetailsById(id);\n        setState(prevState => ({\n          ...prevState,\n          movie: { ...data },\n          loading: false,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error,\n        }));\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const isMovie = Object.keys(movie).length > 0;\n  const goBack = () => navigate(from);\n\n  return (\n\n      <div className=\"container\">\n        {loading && <p className={styles.text}>...Loading</p>}\n        {error && <p className={styles.text}>Movie not found</p>}\n        {isMovie && (\n          <button className={styles.button} onClick={goBack}>\n            Go Back\n          </button>\n        )}\n        {isMovie && <MovieDetails {...movie} />}\n        {isMovie && <h4 className={styles.info}>Additional information</h4>}\n        <div className={styles.wrap}>\n          {isMovie && (\n            <Link className={styles.link} to={`cast`} state={{ from }}>\n              Cast\n            </Link>\n          )}\n          {isMovie && (\n            <Link className={styles.link} to={`reviews`} state={{ from }}>\n              Reviews\n            </Link>\n          )}\n          <Outlet />\n        </div>\n      </div>\n\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst APIKEY = 'a4558d71f5b7095b04316fd2e31fa3af';\n\nexport const getTrending = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get('trending/movie/day', {\n    params: {\n      api_key: APIKEY,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieDetailsById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      api_key: APIKEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetailsByIdCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetailsByIdReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n"],"names":["MovieDetails","title","overview","genres","poster_path","release_date","vote_average","genre","map","el","name","join","releaseDate","slice","voteAverageOnPercentage","className","styles","src","alt","defaultProps","useState","movie","loading","error","state","setState","id","useParams","navigate","useNavigate","from","useLocation","useEffect","fetchMovie","prevState","getMovieDetailsById","data","isMovie","Object","keys","length","onClick","to","instance","axios","baseURL","APIKEY","getTrending","page","get","params","api_key","results","searchMovie","query","getMovieDetailsByIdCredits","getMovieDetailsByIdReviews"],"sourceRoot":""}