{"version":3,"file":"static/js/86.05499ab7.chunk.js","mappings":"qQACA,EAAuB,uBAAvB,EAAqD,uBAArD,EAAmF,uBAAnF,EAAgH,sBAAhH,EAA2I,qB,SC0D3I,EApDiB,WACf,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMQJ,EAAUG,EAAVH,MAEAK,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBJ,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,OAAO,OAJU,mBAOMQ,EAAAA,EAAAA,IAA2BL,GAPjC,gBAOTM,EAPS,EAOTA,KACRP,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBT,MAAOW,EACPV,SAAS,OAXM,gDAcjBG,GAAS,SAAAK,GAAS,yBACbA,GADa,IAEhBR,SAAS,EACTC,MAAK,UAjBU,yDAAH,qDAqBlBM,MACC,CAACH,IAEJ,IAAMO,EAAWZ,EAAMa,KACrB,YAAqD,IAAlDR,EAAiD,EAAjDA,GAAIS,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACzBC,EAAY,yCAAqCD,GACvD,OACE,gBAAIE,UAAWC,EAAf,WACE,gBAAKD,UAAWC,EAAYC,IAAKH,EAAcI,IAAKP,KACpD,eAAGI,UAAWC,EAAd,WAA2B,iBAAMD,UAAWC,EAAjB,mBAA3B,IAAqEL,MACrE,eAAGI,UAAWC,EAAd,WAA2B,iBAAMD,UAAWC,EAAjB,wBAA3B,IAA0EJ,OAH3CV,MASvC,OAAO,eAAIa,UAAWC,EAAf,SAA6BP,M,iMCtDhCU,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAGLC,EAAS,mCAEFC,EAAW,mCAAG,2GAAOC,EAAP,+BAAc,EAAd,SAGfL,EAASM,IAAI,qBAAsB,CAC3CC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KANqB,uBAEfI,EAFe,EAEvBC,KAAQD,QAFe,kBASlBA,GATkB,2CAAH,qDAYXE,EAAmB,mCAAG,WAAM5B,GAAN,yFACViB,EAASM,IAAT,iBAAuBvB,GAAM,CAClDwB,OAAQ,CACNC,QAASL,KAHoB,uBACzBO,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,sDASnBE,EAAW,mCAAG,WAAMC,GAAN,yFACFb,EAASM,IAAI,eAAgB,CAClDC,OAAQ,CACNC,QAASL,EACTU,MAAAA,KAJqB,uBACjBH,EADiB,EACjBA,KADiB,kBAOlBA,GAPkB,2CAAH,sDAUXtB,EAA0B,mCAAG,WAAML,GAAN,yFACjBiB,EAASM,IAAT,iBAAuBvB,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNC,QAASL,KAH2B,uBAChCO,EADgC,EAChCA,KADgC,kBAMjCA,GANiC,2CAAH,sDAS1BI,EAA0B,mCAAG,WAAM/B,GAAN,yFACjBiB,EAASM,IAAT,iBAAuBvB,EAAvB,YAAqC,CAC1DwB,OAAQ,CACNC,QAASL,KAH2B,uBAChCO,EADgC,EAChCA,KADgC,kBAMjCA,GANiC,2CAAH","sources":["webpack://react-homework-template/./src/pages/CastPage/castPage.module.css?5ee2","pages/CastPage/CastPage.jsx","shared/api/movies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"castPage_list__OcaOG\",\"item\":\"castPage_item__HGCRJ\",\"text\":\"castPage_text__FUliF\",\"img\":\"castPage_img__BCr-a\",\"el\":\"castPage_el__WrLii\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieDetailsByIdCredits } from '../../shared/api/movies';\n\nimport styles from './castPage.module.css';\n\nconst CastPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const { items } = state;\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setState(prevState => ({\n        ...prevState,\n        loading: true,\n        error: false,\n      }));\n      try {\n        const { cast } = await getMovieDetailsByIdCredits(id);\n        setState(prevState => ({\n          ...prevState,\n          items: cast,\n          loading: false,\n        }));\n      } catch (error) {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n          error,\n        }));\n      }\n    };\n    fetchReviews();\n  }, [id]);\n\n  const elements = items.map(\n    ({ id, original_name, character, profile_path }) => {\n      const profilePhoto = `https://image.tmdb.org/t/p/w500${profile_path}`;\n      return (\n        <li className={styles.item} key={id}>\n          <img className={styles.img} src={profilePhoto} alt={original_name} />\n          <p className={styles.text}><span className={styles.el}>Name:</span> {original_name}</p>\n          <p className={styles.text}><span className={styles.el}>Character:</span> {character}</p>\n        </li>\n      );\n    }\n  );\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default CastPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n});\n\nconst APIKEY = 'a4558d71f5b7095b04316fd2e31fa3af';\n\nexport const getTrending = async (page = 1) => {\n  const {\n    data: { results },\n  } = await instance.get('trending/movie/day', {\n    params: {\n      api_key: APIKEY,\n      page,\n    },\n  });\n  return results;\n};\n\nexport const getMovieDetailsById = async id => {\n  const { data } = await instance.get(`/movie/${id}`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const searchMovie = async query => {\n  const { data } = await instance.get('search/movie', {\n    params: {\n      api_key: APIKEY,\n      query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetailsByIdCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n\nexport const getMovieDetailsByIdReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: APIKEY,\n    },\n  });\n  return data;\n};\n"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchReviews","prevState","getMovieDetailsByIdCredits","cast","elements","map","original_name","character","profile_path","profilePhoto","className","styles","src","alt","instance","axios","baseURL","APIKEY","getTrending","page","get","params","api_key","results","data","getMovieDetailsById","searchMovie","query","getMovieDetailsByIdReviews"],"sourceRoot":""}